import{o as e,c as n,a}from"./app.e2261b09.js";const s='{"title":"ClamAV лечим, проверяемся, обновляемся","description":"","frontmatter":{"title":"ClamAV лечим, проверяемся, обновляемся","date":"2021-04-18T08:22:05.000Z","cover_index":"http://picsum.photos/450/450?random=143","tags":["Linux"],"categories":["Innovate","ClamAV"]},"headers":[{"level":2,"title":"Устанавливается","slug":"устанавnивается"},{"level":2,"title":"Обновить","slug":"обновить"},{"level":2,"title":"Искать","slug":"искать"},{"level":2,"title":"Возможные ошибки","slug":"возможные-ошибки"},{"level":3,"title":"На проверке sudo freshclam","slug":"на-проверке-sudo-freshclam"},{"level":2,"title":"Развитие","slug":"развитие"},{"level":3,"title":"И постаянная рубрика - \\"подём-ка, переведём-ка\\"","slug":"и-постаянная-рубрика-подём-ка-переведём-ка"}],"relativePath":"blog/clamav.md","lastUpdated":1628440207828}',i={},t=a('<p>ClamAV - это антивирусное ядро ​​с открытым исходным кодом для обнаружения троянов, вирусов, вредоносных программ и других вредоносных угроз.</p><h2 id="устанавnивается"><a class="header-anchor" href="#устанавnивается" aria-hidden="true">#</a> Устанавливается</h2><div class="language-"><pre><code>apt-get update\napt-get install clamav\n</code></pre></div><h2 id="обновить"><a class="header-anchor" href="#обновить" aria-hidden="true">#</a> Обновить</h2><div class="language-"><pre><code>sudo freshclam\n</code></pre></div><h2 id="искать"><a class="header-anchor" href="#искать" aria-hidden="true">#</a> Искать</h2><div class="language-"><pre><code>clamscan -r --bell -i /media/USER/\n</code></pre></div><p>В том смыле, что Винда и прочая ерунда обычно &quot;лежит&quot; /media/USER/, но не забываем проверить подключены ли диски.</p><h2 id="возможные-ошибки"><a class="header-anchor" href="#возможные-ошибки" aria-hidden="true">#</a> Возможные ошибки</h2><h3 id="на-проверке-sudo-freshclam"><a class="header-anchor" href="#на-проверке-sudo-freshclam" aria-hidden="true">#</a> На проверке sudo freshclam</h3><p>Для защиты от множественного запуска демона clamd, по умолчанию на лог файл устанавливается блокировка</p><div class="language-"><pre><code>ERROR: /var/log/clamav/freshclam.log is locked by another process\n</code></pre></div><p>Проверим так ли это</p><div class="language-"><pre><code>sudo lsof /var/log/clamav/freshclam.log\n</code></pre></div><p>Наблюдаем, что-то вроде</p><div class="language-"><pre><code>COMMAND   PID   USER   FD   TYPE DEVICE SIZE/OFF    NODE NAME\nfreshclam 914 clamav    3wW  REG    8,6     2814 3949823 /var/log/clamav/freshclam.log\n</code></pre></div><p>Тогда остновим, обновим, перезапустим:</p><div class="language-"><pre><code>sudo /etc/init.d/clamav-freshclam stop &amp;&amp; sudo freshclam &amp;&amp; sudo /etc/init.d/clamav-freshclam start\n</code></pre></div><h2 id="развитие"><a class="header-anchor" href="#развитие" aria-hidden="true">#</a> Развитие</h2><p>Всё развитие в двух файлах: clamd.conf и freshclam.conf, а найти их, как-то так find / -name clamd.conf</p><h3 id="и-постаянная-рубрика-подём-ка-переведём-ка"><a class="header-anchor" href="#и-постаянная-рубрика-подём-ка-переведём-ка" aria-hidden="true">#</a> И постаянная рубрика - &quot;подём-ка, переведём-ка&quot;</h3><p>clamscan --help</p><pre><code>                   Clam AntiVirus: Scanner 0.102.4\n       By The ClamAV Team: https://www.clamav.net/about.html#credits\n       (C) 2020 Cisco Systems, Inc.\n\nclamscan [options] [file/directory/-]\n\n--help                -h             Show this help\n--version             -V             Print version number\n--verbose             -v             Be verbose\n--archive-verbose     -a             Показывать имена файлов внутри отсканированных архивов\n--debug                              Enable libclamav&#39;s debug messages\n--quiet                              Only output error messages\n--stdout                             Write to stdout instead of stderr. Does not affect &#39;debug&#39; messages.\n--no-summary                         Disable summary at end of scanning\n--infected            -i             Печать только зараженных файлов\n--suppress-ok-results -o             Skip printing OK files\n--bell                               Звуковой звонок при обнаружении вирусов\n\n--tempdir=DIRECTORY                  Create temporary files in DIRECTORY\n--leave-temps[=yes/no(*)]            Do not remove temporary files\n--gen-json[=yes/no(*)]               Generate JSON description of scanned file(s). JSON will be printed and also-\n                                     dropped to the temp directory if --leave-temps is enabled.\n--database=FILE/DIR   -d FILE/DIR    Load virus database from FILE or load all supported db files from DIR\n--official-db-only[=yes/no(*)]       Only load official signatures\n--log=FILE            -l FILE        Save scan report to FILE\n--recursive[=yes/no(*)]  -r          Scan subdirectories recursively\n--allmatch[=yes/no(*)]   -z          Continue scanning within file after finding a match\n--cross-fs[=yes(*)/no]               Scan files and directories on other filesystems\n--follow-dir-symlinks[=0/1(*)/2]     Follow directory symlinks (0 = never, 1 = direct, 2 = always)\n--follow-file-symlinks[=0/1(*)/2]    Follow file symlinks (0 = never, 1 = direct, 2 = always)\n--file-list=FILE      -f FILE        Scan files from FILE\n--remove[=yes/no(*)]                 Удалите зараженные файлы. Будьте осторожны!\n--move=DIRECTORY                     Move infected files into DIRECTORY\n--copy=DIRECTORY                     Copy infected files into DIRECTORY\n--exclude=REGEX                      Don&#39;t scan file names matching REGEX\n--exclude-dir=REGEX                  Don&#39;t scan directories matching REGEX\n--include=REGEX                      Only scan file names matching REGEX\n--include-dir=REGEX                  Only scan directories matching REGEX\n\n--bytecode[=yes(*)/no]               Load bytecode from the database\n--bytecode-unsigned[=yes/no(*)]      Load unsigned bytecode\n--bytecode-timeout=N                 Set bytecode timeout (in milliseconds)\n--statistics[=none(*)/bytecode/pcre] Collect and print execution statistics\n--detect-pua[=yes/no(*)]             Detect Possibly Unwanted Applications\n--exclude-pua=CAT                    Skip PUA sigs of category CAT\n--include-pua=CAT                    Load PUA sigs of category CAT\n--detect-structured[=yes/no(*)]      Detect structured data (SSN, Credit Card)\n--structured-ssn-format=X            SSN format (0=normal,1=stripped,2=both)\n--structured-ssn-count=N             Min SSN count to generate a detect\n--structured-cc-count=N              Min CC count to generate a detect\n--scan-mail[=yes(*)/no]              Scan mail files\n--phishing-sigs[=yes(*)/no]          Enable email signature-based phishing detection\n--phishing-scan-urls[=yes(*)/no]     Enable URL signature-based phishing detection\n--heuristic-alerts[=yes(*)/no]       Heuristic alerts\n--heuristic-scan-precedence[=yes/no(*)] Stop scanning as soon as a heuristic match is found\n--normalize[=yes(*)/no]              Normalize html, script, and text files. Use normalize=no for yara compatibility\n--scan-pe[=yes(*)/no]                Scan PE files\n--scan-elf[=yes(*)/no]               Scan ELF files\n--scan-ole2[=yes(*)/no]              Scan OLE2 containers\n--scan-pdf[=yes(*)/no]               Scan PDF files\n--scan-swf[=yes(*)/no]               Scan SWF files\n--scan-html[=yes(*)/no]              Scan HTML files\n--scan-xmldocs[=yes(*)/no]           Scan xml-based document files\n--scan-hwp3[=yes(*)/no]              Scan HWP3 files\n--scan-archive[=yes(*)/no]           Scan archive files (supported by libclamav)\n--alert-broken[=yes/no(*)]           Alert on broken executable files (PE &amp; ELF)\n--alert-encrypted[=yes/no(*)]        Alert on encrypted archives and documents\n--alert-encrypted-archive[=yes/no(*)] Alert on encrypted archives\n--alert-encrypted-doc[=yes/no(*)]    Alert on encrypted documents\n--alert-macros[=yes/no(*)]           Alert on OLE2 files containing VBA macros\n--alert-exceeds-max[=yes/no(*)]      Alert on files that exceed max file size, max scan size, or max recursion limit\n--alert-phishing-ssl[=yes/no(*)]     Alert on emails containing SSL mismatches in URLs\n--alert-phishing-cloak[=yes/no(*)]   Alert on emails containing cloaked URLs\n--alert-partition-intersection[=yes/no(*)] Alert on raw DMG image files containing partition intersections\n--nocerts                            Disable authenticode certificate chain verification in PE files\n--dumpcerts                          Dump authenticode certificate chain in PE files\n\n--max-scantime=#n                    Scan time longer than this will be skipped and assumed clean\n--max-filesize=#n                    Files larger than this will be skipped and assumed clean\n--max-scansize=#n                    The maximum amount of data to scan for each container file (**)\n--max-files=#n                       The maximum number of files to scan for each container file (**)\n--max-recursion=#n                   Maximum archive recursion level for container file (**)\n--max-dir-recursion=#n               Maximum directory recursion level\n--max-embeddedpe=#n                  Maximum size file to check for embedded PE\n--max-htmlnormalize=#n               Maximum size of HTML file to normalize\n--max-htmlnotags=#n                  Maximum size of normalized HTML file to scan\n--max-scriptnormalize=#n             Maximum size of script file to normalize\n--max-ziptypercg=#n                  Maximum size zip to type reanalyze\n--max-partitions=#n                  Maximum number of partitions in disk image to be scanned\n--max-iconspe=#n                     Maximum number of icons in PE file to be scanned\n--max-rechwp3=#n                     Maximum recursive calls to HWP3 parsing function\n--pcre-match-limit=#n                Maximum calls to the PCRE match function.\n--pcre-recmatch-limit=#n             Maximum recursive calls to the PCRE match function.\n--pcre-max-filesize=#n               Maximum size file to perform PCRE subsig matching.\n--disable-cache                      Disable caching and cache checks for hash sums of scanned files.\n</code></pre>',23);i.render=function(a,s,i,o,c,r){return e(),n("div",null,[t])};export{s as __pageData,i as default};
