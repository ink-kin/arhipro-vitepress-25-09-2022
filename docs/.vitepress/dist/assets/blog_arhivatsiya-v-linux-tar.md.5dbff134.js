import{o as i,c as r,a as t}from"./app.e2261b09.js";const a='{"title":"Архивирование в Linux","description":"","frontmatter":{"title":"Архивирование в Linux","date":"2020-12-04T11:22:05.000Z","cover_index":"http://picsum.photos/450/450?random=22","tags":["Tar","Shar","Ar","Cpio","Linux","Gzip","Bzip","Lzma","Xz","Zip"],"categories":["Innovate","CLI"]},"headers":[{"level":2,"title":"Архивирование в Linux","slug":"архивирование-в-linux"},{"level":2,"title":"Tar","slug":"tar"},{"level":2,"title":"Shar","slug":"shar"},{"level":2,"title":"Cpio","slug":"cpio"},{"level":2,"title":"Сжатие архивов в Linux","slug":"сжатие-архивов-в-linux"},{"level":3,"title":"Gzip","slug":"gzip"},{"level":3,"title":"Bzip","slug":"bzip"},{"level":3,"title":"Lzma","slug":"lzma"},{"level":3,"title":"Xz","slug":"xz"},{"level":3,"title":"Zip","slug":"zip"},{"level":2,"title":"Выводы","slug":"выводы"}],"relativePath":"blog/arhivatsiya-v-linux-tar.md","lastUpdated":1628440207824}',p={},l=t('<p>В наши дни мы сталкиваемся с файлами архивов очень часто и на всех платформах: Windows, Mac или Linux. Это могут быть программы, резервные копии систем или баз данных или просто архив файлов. Нам также часто приходится создавать свои архивы в Linux, чтобы передать несколько файлов друзьям или загрузить на файлообменник. В виде архивов распространяются пакеты программ, исходные коды, а также много других файлов, распространяемых на просторах интернета. Научиться выполнять архивирование файлов в Linux через терминал очень важно, возможно это вам понадобиться, когда не будет доступа к графическому интерфейсу, или просто со временем в терминале станет более приятно работать.</p><p>В этой инструкции я хочу подробно рассмотреть утилиты для архивирования в Linux, мы рассмотрим не только самую популярную и универсальную утилиту - tar, но и другие менее известные, а также популярные алгоритмы сжатия.</p><p>Содержание статьи:</p><h2 id="архивирование-в-linux"><a class="header-anchor" href="#архивирование-в-linux" aria-hidden="true">#</a> Архивирование в Linux</h2><p>Важно отметить, что архивирование в linux это не одно и то же что и сжатие файлов linux. Архивирование - это объединение нескольких небольших файлов в один, с целю более удобной последующей передачи, хранения, шифрования или сжатия. Как я уже сказал, архивация выполняется специальными утилитами. Мы не будем трогать архивацию файлов в графическом интерфейсе, вы с ними разберетесь сами, наша тема - терминал.</p><p>Самой популярной для Linux утилитой для архивации есть tar. Она используется почти везде, для архивации исходников, упаковки пакетов. Для сжатия используются другие утилиты, в зависимости от алгоритма сжатия, например, zip, bz, xz, lzma и т д. Сначала выполняется архивация, затем сжатие, отдельными программами. Автоматический запуск некоторых утилит сжатия для только что созданного архива поддерживается в tar и других подобных программах с помощью специальных опций.</p><p>Также полезной возможностью архивации есть шифрование. Но теперь давайте рассмотрим какие существуют утилиты, с помощью которых выполняется архивирование файлов linux и как ими пользоваться.</p><h2 id="tar"><a class="header-anchor" href="#tar" aria-hidden="true">#</a> Tar</h2><p>Tar - это стандартная утилита, с помощью которой выполняется архивирование файлов Linux. Постепенно из небольшой программы архивации она превратилась в мощный инструмент, поддерживающий работу со многими вариантами архивов и алгоритмами сжатия. Программа поддерживает большое количество параметров. Давайте рассмотрим ее синтаксис и основные параметры:</p><p><strong>$ tar опции f файл_для_записи /папка_файлами_для_архива</strong></p><p>А теперь разберем основные опции:</p><ul><li><strong>A</strong> - добавить файл к архиву</li><li><strong>c</strong> - создать архив в linux</li><li><strong>d</strong> - сравнить файлы архива и распакованные файлы в файловой системе</li><li><strong>j</strong> - сжать архив с помощью Bzip</li><li><strong>z</strong> - сжать архив с помощью Gzip</li><li><strong>r</strong> - добавить файлы в конец архива</li><li><strong>t</strong> - показать содержимое архива</li><li><strong>u</strong> - обновить архив относительно файловой системы</li><li><strong>x</strong> - извлечь файлы из архива</li><li><strong>v</strong> - показать подробную информацию о процессе работы</li><li><strong>f</strong> - файл для записи архива</li><li><strong>-C</strong> - распаковать в указанную папку</li><li><strong>--strip-components</strong> - отбросить n вложенных папок</li></ul><p>Теперь давайте рассмотрим архивирование файлов в Linux. Чтобы создать архив используйте такую команду:</p><div class="language-"><pre><code>tar -cvf archive.tar.gz /path/to/files\n</code></pre></div><p>А чтобы распаковать архив tar linux:</p><div class="language-"><pre><code>tar -xvf archive.tar.gz\n</code></pre></div><p>Очень просто запомнить для упаковки используется опция<strong>c</strong> - <strong>C</strong>reate, а для распаковки - <strong>x</strong> - e<strong>X</strong>tract.</p><p>Сжатый архив создается точно так же, только с опцией -z, это в случае, если использовалось шифрование gizp, если нужно bzip то применяется опция -j:</p><div class="language-"><pre><code>tar -zcvf archive.tar.gz /path/to/files$ tar -zxvf archive.tar.gz\n</code></pre></div><p>Например, рассмотрим как заархивировать папку в Linux:</p><div class="language-"><pre><code>tar -zcvf home.tar.gz ~/\n</code></pre></div><p>Хотя можно поступить по-другому, тот же архив мы получим если сначала создать обычный архив с помощью tar, а потом сжать его утилитой для сжатия, только здесь мы получаем больше контроля над процессом сжатия:</p><div class="language-"><pre><code>gzip archive.tar\n</code></pre></div><p>Также можно убрать сжатие:</p><p>gunzip archive.tar.gzУтилиты сжатия мы рассмотрим ниже.</p><p>Чтобы добавить файл в архив используйте:</p><div class="language-"><pre><code>tar -rvf archive.tar file.txt\n</code></pre></div><p>Для извлечения одного файла синтаксис тот же:</p><p>tar -xvf archive.tar file.txtМожно извлечь несколько файлов по шаблону соответствия с помощью параметра wildcard, например, извлечем все php файлы:</p><p>tar -xvf archive.tar --wildcards &#39;*.php&#39;По умолчанию распаковать архив tar linux можно в текущую папку с именем архива, чтобы распаковать в нужную папку используйте ключ -C:</p><p>tar -xvf archive.tar -C /path/to/dirСтандартную утилиту рассмотрели, теперь кратко рассмотрим ее альтернативы. Их не так много, и большинство из них уже устаревшие.</p><h2 id="shar"><a class="header-anchor" href="#shar" aria-hidden="true">#</a> Shar</h2><p>Shar позволяет создавать самораспаковывающиеся архивы. По сути, это скрипт оболочки, и для распаковки ему необходима оболочка Bash или другая совместимая с Bourne Shell. У Shar есть несколько преимуществ, но также он потенциально небезопасный, так как архив представляет собой исполняемый файл.</p><p>Опции shar:</p><ul><li><strong>-o</strong> - сохранять архив в файл вместо стандартного вывода</li><li><strong>-l</strong> - ограничить размер выходного файла</li><li><strong>-L</strong> - ограничить размер выходного файла и разбить его на части</li><li><strong>-n</strong> - имя архива не будет включено в заголовок</li><li><strong>-a</strong> - разрешить автоматическую генерацию заголовков</li></ul><p>Примеры использования shar для того чтобы заархивировать папку linux:</p><p>Создаем shar архив:</p><p>shar file_name.extension &gt; filename.sharРаспаковываем shar архив:</p><p>./filename.shar## Ar</p><p>ar - утилита для создания и управления архивами. В основном используется для архивации статических библиотек, но может быть использована для создания любых архивов. Раньше использовалась довольно часто но была вытеснена утилитой tar. Сейчас используется только для создания и обновления файлов статических библиотек.</p><p>Опции Ar:</p><ul><li><strong>- d</strong> - удалить модули из архива</li><li><strong>- m</strong> - перемещение членов в архиве</li><li><strong>- p</strong> - напечатать специфические члены архива</li><li><strong>- q</strong> - быстрое добавление</li><li><strong>- r</strong> - добавить члена к архиву</li><li><strong>- s</strong> - создать индекс архива</li><li><strong>- a</strong> - добавить новый файл к существующему архиву</li></ul><p>Теперь рассмотрим примеры использования. Создадим статическую библиотеку libmath.a из объектных файлов substraction.o и division.o:</p><p>ar cr libmath.a substraction.o division.oТеперь извлечем файлы из архива:</p><p>ar x libmath.aТаким образом, можно распаковать любую статическую библиотеку.</p><h2 id="cpio"><a class="header-anchor" href="#cpio" aria-hidden="true">#</a> Cpio</h2><p>cpio - означает Copy in and out (скопировать ввод и вывод). Это еще один стандартный архиватор для Linux. Активно используется в менеджере пакетов Red Hat, а также для создания initramfs. Архивация в Linux для обычных файлов с помощью этой программы не применяется.</p><p>Опции утилиты:</p><ul><li><strong>-a</strong> - сбросить время обращения к файлам после их копирования</li><li><strong>-A</strong> - добавить файл</li><li><strong>-d</strong> - создать каталоги при необходимости</li></ul><p>Пример использования. Создаем cpio архив:</p><p>lsfile1.o file2.o file3.ols | cpio -ov &gt; /path/to/output_folder/obj.cpioРаспаковываем архив:</p><p>cpio -idv &lt; /path/to folder/obj.cpioАрхивирование папки linux выполняется также само.</p><h2 id="сжатие-архивов-в-linux"><a class="header-anchor" href="#сжатие-архивов-в-linux" aria-hidden="true">#</a> Сжатие архивов в Linux</h2><p>Как создать архив в linux рассмотрели. Теперь давайте поговорим о сжатии. Как я говорил, для сжатия используются специальные утилиты. Рассмотрим кратко несколько из них</p><h3 id="gzip"><a class="header-anchor" href="#gzip" aria-hidden="true">#</a> Gzip</h3><p>Чаще всего применяется Gzip. Это стандартная утилита сжатия в Unix/Linux. Для декомпрессии используется gunzip или gzip -d Сначала рассмотрим ее синтаксис:</p><p><strong>$ gzip опции файл</strong></p><p><strong>$ gunzip опции файл</strong></p><p>Теперь разберем опции:</p><ul><li><strong>-c</strong> - выводить архив в стандартный вывод</li><li><strong>-d</strong> - распаковать</li><li><strong>-f</strong> - принудительно распаковывать или сжимать</li><li><strong>-l</strong> - показать информацию об архиве</li><li><strong>-r</strong> - рекурсивно перебирать каталоги</li><li><strong>-0</strong> - минимальный уровень сжатия</li><li><strong>-9</strong> - максимальный уровень сжатия</li></ul><p>Примеры использования вы уже видели в описании утилиты tar. Например, выполним сжатие файла:</p><p>gzip -c файл &gt; архив.gzА теперь распакуем:</p><p>gunzip -c архив.gzНо чтобы сжать папку в Linux вам придется сначала заархивировать ее с помощью tar, а уже потом сжать файл архива с помощью gzip.</p><h3 id="bzip"><a class="header-anchor" href="#bzip" aria-hidden="true">#</a> Bzip</h3><p>bzip2 - еще одна альтернативная утилита сжатия для Linux. Она более эффективная чем gzip, но работает медленнее. Для распаковки используйте утилиту bunzip2.</p><p>Описывать опции bzip2 я не буду, они аналогичны gzip. Чтобы создать архив в Linux используйте:</p><p>bzip2 fileВ текущем каталоге будет создан файл file.bz2</p><h3 id="lzma"><a class="header-anchor" href="#lzma" aria-hidden="true">#</a> Lzma</h3><p>Новый и высокоэффективный алгоритм сжатия. Синтаксис и опции тоже похожи на Gzip. Для распаковки используйте unlzma.</p><h3 id="xz"><a class="header-anchor" href="#xz" aria-hidden="true">#</a> Xz</h3><p>Еще один высокоэффективный алгоритм сжатия. Обратно совместимый с Lzma. Параметры вызова тоже похожи на Gzip.</p><h3 id="zip"><a class="header-anchor" href="#zip" aria-hidden="true">#</a> Zip</h3><p>Кроссплатформенная утилита для создания сжатых архивов формата zip. Совместимая с Windows реализациями этого алгоритма. Zip архивы очень часто используются для обмена файлами в интернете. С помощью этой утилиты можно сжимать как файлы, так и сжать папку linux.</p><p>Синтаксис утилиты:</p><p><strong>$ zip опции файлы</strong></p><p><strong>$ unzip опции архив</strong></p><p>Опции утилиты:</p><ul><li><strong>-d</strong> удалить файл из архива</li><li><strong>-r</strong> - рекурсивно обходить каталоги</li><li><strong>-0</strong> - только архивировать, без сжатия</li><li><strong>-9</strong> - наилучший степень сжатия</li><li><strong>-F</strong> - исправить zip файл</li><li><strong>-e</strong> - шифровать файлы</li></ul><p>Чтобы создать Zip архив в Linux используйте:</p><p>zip -r /path/to/files/*А для распаковки:</p><p>unzip archive.zipКак видите архивирование zip в Linux не сильно отличается от других форматов.</p><h2 id="выводы"><a class="header-anchor" href="#выводы" aria-hidden="true">#</a> Выводы</h2><p>Теперь вы знаете все что нужно об архивации файлов в Linux. Мы рассмотрели только консольные команды, так сказать, чтобы была понятна суть. В графическом интерфейсе все еще проще. Если остались вопросы - задавайте их в комментариях</p>',83);p.render=function(t,a,p,n,s,o){return i(),r("div",null,[l])};export{a as __pageData,p as default};
